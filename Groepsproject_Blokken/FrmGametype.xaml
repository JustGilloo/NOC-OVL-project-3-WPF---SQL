<Window x:Class="Groepsproject_Blokken.FrmGametype"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Groepsproject_Blokken"
        mc:Ignorable="d"
        Title="FrmGametype"
        Height="720" Width="1280" MinHeight="720" MinWidth="1280"
        WindowStartupLocation="CenterScreen" Closing="Window_Closing" Loaded="Window_Loaded">

    <Window.Triggers>
        <EventTrigger RoutedEvent="Button.Click" SourceName="btnSingle">
            <BeginStoryboard>
                <Storyboard x:Name="DramatischeFadeToBlack">
                    <DoubleAnimation Storyboard.TargetProperty="(Window.Opacity)"
                        From="1.0" To="0.0" Duration="0:0:2"
                        AutoReverse="False"/>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
        <EventTrigger RoutedEvent="Button.Click" SourceName="btnVS">
            <BeginStoryboard>
                <Storyboard x:Name="DramatischeFadeToBlack2">
                    <DoubleAnimation Storyboard.TargetProperty="(Window.Opacity)"
                From="1.0" To="0.0" Duration="0:0:2"
                AutoReverse="False"/>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>
    <Window.Resources>
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="#0D0080"
                  BorderBrush="#fea702"
                  BorderThickness="1" />
                <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="#0D0080"
                  BorderBrush="#fea702"
                  BorderThickness="0,0,1,0" />
                <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
            </Grid>
            <!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>-->
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="#0D0080"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                            Name="Popup"
                                Opacity="0.8"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                                <Grid Name="DropDown"
                                      Opacity="0.9"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                x:Name="DropDownBorder"
                                Background="#0D0080"

                                BorderThickness="1"
                                BorderBrush="#fea702"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!-- SimpleStyles: ComboBoxItem -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#0D0080"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#fea702"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderThickness="8" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" CornerRadius="25" BorderBrush="#fea702">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>

                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="true">

                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="230"  Storyboard.TargetProperty="Width" Duration="0:0:0.3" />
                                            <DoubleAnimation To="90"  Storyboard.TargetProperty="Height" Duration="0:0:0.3" />
                                            <ColorAnimation To="#0D0080" Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" Duration="0:0:0.3"/>
                                            <ColorAnimation To="WhiteSmoke" Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>

                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="200"  Storyboard.TargetProperty="Width" Duration="0:0:0.3" />
                                            <DoubleAnimation To="60"  Storyboard.TargetProperty="Height" Duration="0:0:0.3" />
                                            <ColorAnimation To="#fea702" Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" Duration="0:0:0.3"/>
                                            <ColorAnimation To="Black" Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.Background>
            <ImageBrush ImageSource="Assets/Blokken achtergrond Hi Res.jpg" Stretch="UniformToFill"/>

        </Grid.Background>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Image x:Name="BerndCrabbe" HorizontalAlignment="Left" VerticalAlignment="Bottom" Source="Assets/BerndCrabbe NoBackGround.png"  Stretch="Uniform" Grid.ColumnSpan="2" Margin="50,0,0,0" Width="427">
            <Image.RenderTransform>
                <TranslateTransform/>
            </Image.RenderTransform>

            <Image.Triggers>
                <EventTrigger RoutedEvent="Button.Click">
                    <BeginStoryboard>
                        <Storyboard x:Name="BerndCrabbeWeg">
                            <DoubleAnimation Storyboard.TargetName="BerndCrabbe" Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.X)"
                            From="0" To="-400" Duration="0:0:2" DecelerationRatio="0.8"
                            AutoReverse="False"/>
                            <DoubleAnimation Storyboard.TargetName="BerndCrabbe" Storyboard.TargetProperty="(Image.Opacity)"
From="1" To="0" Duration="0:0:2" AccelerationRatio="0.8"
AutoReverse="False"/>
                        </Storyboard>
                    </BeginStoryboard>

                </EventTrigger>
            </Image.Triggers>
        </Image>
        <Image x:Name="BlokkenLogo" Grid.Column="1" Source="/Assets/BlokkenLogo2.png" VerticalAlignment="Top" Stretch="Uniform">
            <Image.RenderTransform>
                <TranslateTransform/>
            </Image.RenderTransform>

            <Image.Triggers>
                <EventTrigger RoutedEvent="Window.Unloaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="BlokkenLogo" Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.Y)"
                            From="0" To="-200" Duration="0:0:2" DecelerationRatio="0.9"
                            AutoReverse="False"/>
                        </Storyboard>
                    </BeginStoryboard>

                </EventTrigger>
            </Image.Triggers>

        </Image>
        <StackPanel Orientation="Vertical" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Name="StackPanel">
            <StackPanel.Triggers>
                <EventTrigger RoutedEvent="Window.Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="StackPanel" Storyboard.TargetProperty="Opacity"
                From="0" To="1" Duration="0:0:1" DecelerationRatio="0.9"
                AutoReverse="False"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.Click">
                    <BeginStoryboard>
                        <Storyboard x:Name="StackPanelButtonsWeg">
                            <DoubleAnimation Storyboard.TargetName="StackPanel" Storyboard.TargetProperty="Opacity"
From="1" To="0" Duration="0:0:1" DecelerationRatio="0.9"
AutoReverse="False"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </StackPanel.Triggers>


            <Button x:Name="btnSingle"
        Margin="3"
        Content="Finalespel"
        Width="200"
        Height="60"
        FontSize="30"
        Background="#fea702"
        Foreground="Black"
        FontFamily="{StaticResource BlokkenFont}"
        Click="btnSingle_Click"
        >
            </Button>
            <Button x:Name="btnVS"
        Margin="3"
        Content="Versus"
        Width="200"
        Height="60"
        FontSize="30"
        Background="#fea702"
        Foreground="Black"
        FontFamily="{StaticResource BlokkenFont}"
        Click="btnVS_Click"
        >
            </Button>
            <Button x:Name="btnReturn"
        Margin="3"
        Content="Return"
        Width="200"
        Height="60"
        FontSize="30"
        Background="#fea702"
        Foreground="Black"
        FontFamily="{StaticResource BlokkenFont}"
        Click="btnReturn_Click"
        >
            </Button>
        </StackPanel>
        <StackPanel Name="StackPanelVolume" Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="300" Height="50"  Background="#fea702"  Orientation="Horizontal" MouseEnter="sliderVolume_MouseEnter" MouseLeave="sliderVolume_MouseLeave" Opacity="0.3">
            <Slider x:Name="sliderVolume" Grid.Column="2" HorizontalAlignment="Left" Width="210" Height="50" ValueChanged="sliderVolume_ValueChanged" Maximum="100" Minimum="0" Value="99" Margin="15" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
            <Image x:Name="imgVolume" Source="Assets/Icon High.png" Width="50" Height="50" HorizontalAlignment="Right" Stretch="UniformToFill"></Image>

        </StackPanel>

        <StackPanel Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Top" Name="StackPanelVragenlijst">
            <StackPanel.Triggers>
                <EventTrigger RoutedEvent="Window.Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="StackPanelVragenlijst" Storyboard.TargetProperty="Opacity"
                From="0" To="1" Duration="0:0:1" DecelerationRatio="0.9"
                AutoReverse="False"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Window.Unloaded">
                    <BeginStoryboard>
                        <Storyboard x:Name="StackPanelVragenlijstenWeg">
                            <DoubleAnimation Storyboard.TargetName="StackPanelVragenlijst" Storyboard.TargetProperty="Opacity"
From="1" To="0" Duration="0:0:1" DecelerationRatio="0.9"
AutoReverse="False"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </StackPanel.Triggers>
            <StackPanel Background="Transparent" OpacityMask="WhiteSmoke" Opacity="1">
                <!--StackPanel.Resources>
                    <Style TargetType="StackPanel">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Opacity="1" Color="#0D0080"/>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </StackPanel.Resources>-->
                <Label Content="Kies hier de vragenlijsten die u wilt gebruiken." Foreground="WhiteSmoke" HorizontalAlignment="Center"  FontSize="19" FontWeight="Bold" FontFamily="{StaticResource BlokkenFont}">
                    <!--<Label.Resources>
                        <Style TargetType="Label">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Opacity="0.4" Color="#0D0080"/>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Label.Resources>-->
                </Label>
                <ComboBox x:Name="cmbVragenLijsten" Margin="15,14,15,30" Opacity="0.8">
                    <!--<ComboBox.Resources>
                        <Style TargetType="ComboBox">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Opacity="0.4" Color="#0D0080"/>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ComboBox.Resources>-->
                </ComboBox>
            </StackPanel>
            <Button x:Name="btnVoegVragenLijstToe"
                    Margin="3"
                    Content="Voeg Toe"
                    Width="200"
                    Height="60"
                    FontSize="30"
                    Background="#fea702"
                    Foreground="Black"
                    FontFamily="{StaticResource BlokkenFont}"
                   
                    Click="btnVoegVragenLijstToe_Click">
            </Button>
            <GroupBox
                Name="GroupBoxVragenlijst"
                Header="ACTIEVE VRAGENLIJST"
                      Grid.Row="0"
                      Grid.Column="5"
                      Grid.RowSpan="5"
                      Width="225"
                      FontFamily="{StaticResource BlokkenFont}"
                      Foreground="White"
                Background="#0D0080"
                BorderBrush="#0D0080"
                Opacity="0.92"
                Margin="0,30,0,0">

                <ListBox x:Name="lbQuestionsDisplay"
                         ToolTip="CTRL + linker-CLICK om te deselecteren"
                         Height="350"
                         Width="220"
                         HorizontalContentAlignment="Center"
                         Background="#fea702">
                    <ListBox.Resources>
                        <Style TargetType="Border">

                            <Setter Property="CornerRadius" Value="40"/>

                        </Style>
                    </ListBox.Resources>
                </ListBox>
            </GroupBox>
        </StackPanel>
    </Grid>
</Window>